package ru.golovanov.mapper

import org.mapstruct.Mapper
import ru.golovanov.dto.ActionMessage
import ru.golovanov.enums.ActionType

@Mapper(
    componentModel = "spring"
)
abstract class ActionMapper {

    fun toPrettyString(message: ActionMessage): String =
        """
            ‚úÖ ${actionEmoji(message.actionType)} ${actionLabel(message.actionType)} –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ [${message.repository}]:
            
            üîß –°–æ–æ–±—â–µ–Ω–∏–µ: ${message.message}  
            üë§ –ê–≤—Ç–æ—Ä: ${message.author}  
            üìÖ –í—Ä–µ–º—è: ${message.time}  
            üîó ${message.link}
        """.trimIndent()

    private fun actionEmoji(type: ActionType): String = when (type) {
        ActionType.COMMIT -> "‚úÖ"
        ActionType.MERGE -> "üîÄ"
        ActionType.PULL_REQUEST -> "üì¶"
        ActionType.ISSUE -> "üêû"
        ActionType.RELEASE -> "üöÄ"
        ActionType.DEFAULT -> "üì¶"
    }

    private fun actionLabel(type: ActionType): String = when (type) {
        ActionType.COMMIT -> "–ù–æ–≤—ã–π –∫–æ–º–º–∏—Ç"
        ActionType.MERGE -> "–°–ª–∏—è–Ω–∏–µ –≤–µ—Ç–æ–∫"
        ActionType.PULL_REQUEST -> "Pull Request"
        ActionType.ISSUE -> "–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞"
        ActionType.RELEASE -> "–ù–æ–≤—ã–π —Ä–µ–ª–∏–∑"
        ActionType.DEFAULT -> "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ"
    }
}